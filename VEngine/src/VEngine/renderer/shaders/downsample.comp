#version 450 core

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

layout(rgba16f, binding = 0) uniform readonly image2D u_input;
layout(rgba16f, binding = 1) uniform writeonly image2D u_output;

void main()
{
    memoryBarrierShared();
   	ivec2 mipCoords = ivec2(gl_GlobalInvocationID.xy);
    ivec2 sourceCoords = mipCoords * 2;

    ivec2 clampMin = ivec2(0);
    ivec2 clampMax = ivec2(imageSize(u_input)) - 1;
    ivec2 offsets = ivec2(0, 1);

    // Read the pixels from the source texture.
    vec4 val00 = imageLoad(u_input, clamp(sourceCoords + offsets.xx, clampMin, clampMax));
    vec4 val01 = imageLoad(u_input, clamp(sourceCoords + offsets.xy, clampMin, clampMax));
    vec4 val10 = imageLoad(u_input, clamp(sourceCoords + offsets.yx, clampMin, clampMax));
    vec4 val11 = imageLoad(u_input, clamp(sourceCoords + offsets.yy, clampMin, clampMax));
    
    vec4 result = (val00 + val01 + val10 + val11) * 0.25;
    imageStore(u_output, mipCoords, result);
}